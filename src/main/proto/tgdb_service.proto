syntax = "proto3";

// TODO: Better package name.
option java_multiple_files = true;
option java_package = "edu.mit.csail.tgdb";
option java_outer_classname = "TGDBServiceProto";
option objc_class_prefix = "TGDBSVC";

// For <key,value> pairs as Node properties.
import "google/protobuf/struct.proto";

package tgdb_service;

// =============================================================================
// Implements both LinkStore and NodeStore APIs for LinkBench. See:
//
// https://github.com/mdcallag/linkbench/blob/master/src/main/java/com/facebook/LinkBench/LinkStore.java
// https://github.com/mdcallag/linkbench/blob/master/src/main/java/com/facebook/LinkBench/NodeStore.java
// =============================================================================
service TGDBLinkStore {
  // ---------- NodeStore API ----------
  rpc AddNode(AddNodeRequest) returns (AddNodeResponse) {}

  // ---------- LinkStore API ----------
  // Initialize the link store object.
  rpc Initialize(InitializeRequest) returns (InitializeResponse) {}

  // Do any cleanup. After this is called, store won't be reused.
  rpc Close(CloseRequest) returns (CloseResponse) {}

  // Invoked when an error happens in case connection needs to be cleaned up,
  // reset, reopened, etc.
  rpc ClearErrors(ClearErrorsRequest) returns (ClearErrorsResponse) {}

  // Lookup using id1, type, id2.
  rpc GetLink(GetLinkRequest) returns (GetLinkResponse) {}

  // Lookup multiple links: same as getlink, but retrieve multiple ids.
  rpc GetLinks(GetLinksRequest) returns (GetLinksResponse) {}

  // Lookup using just id1, type.  Links are returned in descending order of
  // time.
  rpc GetLinksById1(GetLinksById1Request) returns (GetLinksById1Response) {}
}

message AddNodeRequest { Node node = 1; }
message AddNodeResponse {}

message InitializeRequest {}
message InitializeResponse {}

message CloseRequest {}
message CloseResponse {}

message ClearErrorsRequest {}
message ClearErrorsResponse {}

message GetLinkRequest {
  int64 id1 = 1;
  int64 link_type = 2;
  int64 id2 = 3;
}
message GetLinkResponse {}

message GetLinksRequest {
  int64 id1 = 1;
  int64 link_type = 2;

  // Multiple matches.
  repeated int64 id2s = 3;
}
message GetLinksResponse {}

message GetLinksById1Request {
  int64 id1 = 1;
  int64 link_type = 2;
}
message GetLinksById1Response {
  // Multiple matches.
  repeated int64 id2s = 1;
}

message Node {
  int64 id = 1;
  google.protobuf.Struct properties = 2;
}
